  version: '3.5'

  services:

    zookeeper:
      image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
      command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
      ports:
        - "2181:2181"
      environment:
        LOG_DIR: /tmp/logs
      networks:
        - kafka-ifg

    kafka:
      image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
      command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
      ]
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        LOG_DIR: "/tmp/logs"
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      networks:
        - kafka-ifg

    postgres:
      image: postgres:15
      container_name: postgres-db
      restart: always
      environment:
        POSTGRES_DB: ifg
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
      ports:
        - "5432:5432"
      networks:
        - kafka-ifg
      volumes:
        - volume_name:/var/lib/postgresql/data

    producer:
      image: ifg-kafka/producer:1.0-${QUARKUS_MODE:-jvm}
      build:
        context: producer
        dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
      depends_on:
        - kafka
        - postgres
      environment:
        KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/ifg
        QUARKUS_DATASOURCE_USERNAME: postgres
        QUARKUS_DATASOURCE_PASSWORD: password
      ports:
        - "8080:8080"
      networks:
        - kafka-ifg

    processor:
      image: ifg-kafka/processor:1.0-${QUARKUS_MODE:-jvm}
      build:
        context: processor
        dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
      depends_on:
        - kafka
      environment:
        KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      networks:
        - kafka-ifg

  networks:
    kafka-ifg:
      name: kafkaifg

  volumes:
    volume_name:
      name: volume_name
